const table = [
	{ code: 0x01, operandCount: 2, op: 'je', branch: true },
	{ code: 0x02, operandCount: 2, op: 'jl', branch: true },
	{ code: 0x03, operandCount: 2, op: 'jg', branch: true },
	{ code: 0x04, operandCount: 2, op: 'dec_chk', branch: true },
	{ code: 0x05, operandCount: 2, op: 'inc_chk', branch: true },
	{ code: 0x06, operandCount: 2, op: 'jin', branch: true },
	{ code: 0x07, operandCount: 2, op: 'test', branch: true },
	{ code: 0x08, operandCount: 2, op: 'or', store: true },
	{ code: 0x09, operandCount: 2, op: 'and', store: true },
	{ code: 0x0A, operandCount: 2, op: 'test_attr', branch: true },
	{ code: 0x0B, operandCount: 2, op: 'set_attr' },
	{ code: 0x0C, operandCount: 2, op: 'clear_attr' },
	{ code: 0x0D, operandCount: 2, op: 'store' },
	{ code: 0x0E, operandCount: 2, op: 'insert_obj' },
	{ code: 0x0F, operandCount: 2, op: 'loadw', store: true },
	{ code: 0x10, operandCount: 2, op: 'loadb', store: true },
	{ code: 0x11, operandCount: 2, op: 'get_prop', store: true },
	{ code: 0x12, operandCount: 2, op: 'get_prop_addr', store: true },
	{ code: 0x13, operandCount: 2, op: 'get_next_prop', store: true },
	{ code: 0x14, operandCount: 2, op: 'add', store: true },
	{ code: 0x15, operandCount: 2, op: 'sub', store: true },
	{ code: 0x16, operandCount: 2, op: 'mul', store: true },
	{ code: 0x17, operandCount: 2, op: 'div', store: true },
	{ code: 0x18, operandCount: 2, op: 'mod', store: true },
	{ code: 0x19, operandCount: 2, op: 'call_2s', store: true, minVersion: 4 },
	{ code: 0x1A, operandCount: 2, op: 'call_2n', minVersion: 5 },
	{ code: 0x1B, operandCount: 2, op: 'set_colour', minVersion: 5 },
	{ code: 0x1C, operandCount: 2, op: 'throw', minVersion: 5 },

	{ code: 0x00, operandCount: 1, op: 'jz', branch: true },
	{ code: 0x01, operandCount: 1, op: 'get_sibling', store: true, branch: true, },
	{ code: 0x02, operandCount: 1, op: 'get_child', store: true, branch: true, },
	{ code: 0x03, operandCount: 1, op: 'get_parent', store: true },
	{ code: 0x04, operandCount: 1, op: 'get_prop_len', store: true },
	{ code: 0x05, operandCount: 1, op: 'inc' },
	{ code: 0x06, operandCount: 1, op: 'dec' },
	{ code: 0x07, operandCount: 1, op: 'print_addr' },
	{ code: 0x08, operandCount: 1, op: 'call_1s', minVersion: 4, store: true },
	{ code: 0x09, operandCount: 1, op: 'remove_obj' },
	{ code: 0x0A, operandCount: 1, op: 'print_obj' },
	{ code: 0x0B, operandCount: 1, op: 'ret' },
	{ code: 0x0C, operandCount: 1, op: 'jump' },
	{ code: 0x0D, operandCount: 1, op: 'print_paddr' },
	{ code: 0x0E, operandCount: 1, op: 'load', store: true },
	{ code: 0x0F, operandCount: 1, op: 'not', maxVersion: 4, store: true },
	{ code: 0x0F, operandCount: 1, op: 'call_1n', minVersion: 5 },

	{ code: 0x00, operandCount: 0, op: 'rtrue' },
	{ code: 0x01, operandCount: 0, op: 'rfalse' },
	{ code: 0x02, operandCount: 0, op: 'print', text: true },
	{ code: 0x03, operandCount: 0, op: 'print_ret' },
	{ code: 0x04, operandCount: 0, op: 'nop' },
	{ code: 0x05, operandCount: 0, op: 'save', maxVersion: 3, branch: true },
	{ code: 0x05, operandCount: 0, op: 'save', minVersion: 4, maxVersion: 4 },
	{ code: 0x06, operandCount: 0, op: 'restore', maxVersion: 3, branch: true },
	{ code: 0x06, operandCount: 0, op: 'restore', minVersion: 4, maxVersion: 4 },
	{ code: 0x07, operandCount: 0, op: 'restart' },
	{ code: 0x08, operandCount: 0, op: 'ret_popped' },
	{ code: 0x09, operandCount: 0, op: 'pop', maxVersion: 4 },
	{ code: 0x09, operandCount: 0, op: 'catch', minVersion: 5, store: true },
	{ code: 0x0A, operandCount: 0, op: 'quit' },
	{ code: 0x0B, operandCount: 0, op: 'new_line' },
	{ code: 0x0C, operandCount: 0, op: 'show_status', minVersion: 3, maxVersion: 3 },
	{ code: 0x0D, operandCount: 0, op: 'verify', minVersion: 3, branch: true},
	{ code: 0x0E, operandCount: 0, op: '[first byte of extended opcode]', minVersion: 5 },
	{ code: 0x0F, operandCount: 0, op: 'piracy', minVersion: 5, branch: true },

	{ code: 0x00, operandCount: 'VAR', op: 'call', maxVersion: 3, store: true },
	{ code: 0x00, operandCount: 'VAR', op: 'call_vs', minVersion: 4 },
	{ code: 0x01, operandCount: 'VAR', op: 'storew' },
	{ code: 0x02, operandCount: 'VAR', op: 'storeb' },
	{ code: 0x03, operandCount: 'VAR', op: 'put_prop' },
	{ code: 0x04, operandCount: 'VAR', op: 'read', maxVersion: 4 },
	{ code: 0x04, operandCount: 'VAR', op: 'read', minVersion: 5, store: true },
	{ code: 0x05, operandCount: 'VAR', op: 'print_char' },
	{ code: 0x06, operandCount: 'VAR', op: 'print_num' },
	{ code: 0x07, operandCount: 'VAR', op: 'random', store: true },
	{ code: 0x08, operandCount: 'VAR', op: 'push' },
	{ code: 0x09, operandCount: 'VAR', op: 'pull', maxVersion: 5 },
	{ code: 0x09, operandCount: 'VAR', op: 'pull', minVersion: 6, store: true },
	{ code: 0x0A, operandCount: 'VAR', op: 'split_window', minVersion: 3 },
	{ code: 0x0B, operandCount: 'VAR', op: 'set_window', minVersion: 3 },
	{ code: 0x0C, operandCount: 'VAR', op: 'call_vs2', minVersion: 4, store: true },
	{ code: 0x0D, operandCount: 'VAR', op: 'erase_window', minVersion: 4 },
	{ code: 0x0E, operandCount: 'VAR', op: 'erase_line', minVersion: 4 },
	{ code: 0x0F, operandCount: 'VAR', op: 'set_cursor', minVersion: 4 },
	{ code: 0x10, operandCount: 'VAR', op: 'get_cursor', minVersion: 4 },
	{ code: 0x11, operandCount: 'VAR', op: 'set_text_style', minVersion: 4 },
	{ code: 0x12, operandCount: 'VAR', op: 'buffer_mode', minVersion: 4 },
	{ code: 0x13, operandCount: 'VAR', op: 'output_stream', minVersion: 3 },
	{ code: 0x14, operandCount: 'VAR', op: 'input_stream', minVersion: 3 },
	{ code: 0x15, operandCount: 'VAR', op: 'sound_effect', minVersion: 3 },
	{ code: 0x16, operandCount: 'VAR', op: 'read_char', minVersion: 4, store: true},
	{ code: 0x17, operandCount: 'VAR', op: 'scan_table', minVersion: 4, store: true, branch: true },
	{ code: 0x18, operandCount: 'VAR', op: 'not', minVersion: 5, store: true },
	{ code: 0x19, operandCount: 'VAR', op: 'call_vn', minVersion: 5 },
	{ code: 0x1A, operandCount: 'VAR', op: 'call_vn2', minVersion: 5 },
	{ code: 0x1B, operandCount: 'VAR', op: 'tokenise', minVersion: 5 },
	{ code: 0x1C, operandCount: 'VAR', op: 'encode_text', minVersion: 5 },
	{ code: 0x1D, operandCount: 'VAR', op: 'copy_table', minVersion: 5 },
	{ code: 0x1E, operandCount: 'VAR', op: 'print_table', minVersion: 5 },
	{ code: 0x1F, operandCount: 'VAR', op: 'check_arg_count', minVersion: 5, branch: true },

	{ code: 0x00, operandCount: 'EXT', op: 'save', minVersion: 5, store: true },
	{ code: 0x01, operandCount: 'EXT', op: 'restore', minVersion: 5, store: true },
	{ code: 0x02, operandCount: 'EXT', op: 'log_shift', minVersion: 5, store: true },
	{ code: 0x03, operandCount: 'EXT', op: 'art_shift', minVersion: 5, store: true },
	{ code: 0x04, operandCount: 'EXT', op: 'set_font', minVersion: 5, store: true },
	{ code: 0x05, operandCount: 'EXT', op: 'draw_picture', minVersion: 6 },
	{ code: 0x06, operandCount: 'EXT', op: 'picture_data', minVersion: 6, branch: true },
	{ code: 0x07, operandCount: 'EXT', op: 'erase_picture', minVersion: 6 },
	{ code: 0x08, operandCount: 'EXT', op: 'set_margins', minVersion: 6 },
	{ code: 0x09, operandCount: 'EXT', op: 'save_undo', minVersion: 5, store: true },
	{ code: 0x0A, operandCount: 'EXT', op: 'restore_undo', minVersion: 5, store: true },
	{ code: 0x0B, operandCount: 'EXT', op: 'print_unicode', minVersion: 5 },
	{ code: 0x0C, operandCount: 'EXT', op: 'check_unicode', minVersion: 5 },
	{ code: 0x10, operandCount: 'EXT', op: 'move_window', minVersion: 6 },
	{ code: 0x11, operandCount: 'EXT', op: 'window_size', minVersion: 6 },
	{ code: 0x12, operandCount: 'EXT', op: 'window_style', minVersion: 6 },
	{ code: 0x13, operandCount: 'EXT', op: 'get_wind_prop', minVersion: 6, store: true },
	{ code: 0x14, operandCount: 'EXT', op: 'scroll_window', minVersion: 6 },
	{ code: 0x15, operandCount: 'EXT', op: 'pop_stack', minVersion: 6 },
	{ code: 0x16, operandCount: 'EXT', op: 'read_mouse', minVersion: 6 },
	{ code: 0x17, operandCount: 'EXT', op: 'mouse_window', minVersion: 6 },
	{ code: 0x18, operandCount: 'EXT', op: 'push_stack', minVersion: 6, branch: true },
	{ code: 0x19, operandCount: 'EXT', op: 'put_wind_prop', minVersion: 6 },
	{ code: 0x1A, operandCount: 'EXT', op: 'print_form', minVersion: 6 },
	{ code: 0x1B, operandCount: 'EXT', op: 'make_menu', minVersion: 6, branch: true },
	{ code: 0x1C, operandCount: 'EXT', op: 'picture_table', minVersion: 6 },
];

const versionTables = {};
[1, 2, 3, 4, 5, 7, 8].forEach(version => {
	versionTables[version] = table.filter(entry => (
		(!entry.minVersion || (version >= entry.minVersion)) &&
		(!entry.maxVersion || (version <= entry.maxVersion))
	));
});

module.exports = function getOpcodeTable(version) {
	return versionTables[version];
}
